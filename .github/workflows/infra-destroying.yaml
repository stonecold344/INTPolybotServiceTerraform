name: Infrastructure Destroy Terraform

on:
  workflow_dispatch:
    inputs:
      us-east-1:
        description: 'N.Virginia (us-east-1)'
        required: false
        type: boolean
      eu-central-1:
        description: 'Frankfurt (eu-central-1)'
        required: false
        type: boolean

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}

    strategy:
      matrix:
        region:
          - us-east-1
          - eu-central-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.7  # Ensure this matches your local version

      - name: Create private key file
        run: echo "${{ secrets.AWS_PRIVATE_KEY }}" > ./tf/aws-bennyi.pem

      - name: List files in tf directory
        run: ls -la ./tf  # This will help verify if the variable files exist

      - name: Infrastructure destroying
        if: ${{ github.event.inputs[matrix.region] == 'true' }}
        working-directory: ./tf
        run: |
          if [ -f region.${{ matrix.region }}.tfvars ]; then
            echo "Initializing Terraform for region: ${{ matrix.region }}"
            terraform init
            
            echo "Selecting or creating workspace for region: ${{ matrix.region }}"
            terraform workspace select ${{ matrix.region }} || terraform workspace new ${{ matrix.region }}

            echo "Destroying infrastructure in region: ${{ matrix.region }}"
            terraform destroy -auto-approve -var-file=region.${{ matrix.region }}.tfvars -target=polybot_subnet -target=polybot_subnet2 -target=polybot_sg || { echo 'Terraform destroy failed!'; exit 1; }
          else
            echo "Variable file region.${{ matrix.region }}.tfvars not found. Skipping destroy."
          fi